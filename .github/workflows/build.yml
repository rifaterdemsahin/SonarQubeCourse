name: Build and SonarQube Analysis
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Debug workspace
        run: |
          echo "Current working directory:"
          pwd
          echo "Directory structure:"
          tree
          echo "Python location:"
          which python
          echo "Content of current directory:"
          ls -la
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests with coverage
        run: |
          python -m pytest --cov=. --cov-report=xml scanfiles_test.py
          
      - name: Commit coverage report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add coverage.xml
          git commit -m "Add coverage report" || echo "No changes to commit"
          git push https://${{ github.token }}@github.com/${{ github.repository }}.git || echo "No changes to push"

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.verbose=true
            -Dsonar.python.coverage.reportPaths=coverage.xml
          
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}